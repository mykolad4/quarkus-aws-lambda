{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "AddDashmodifierLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/modifier-api-dev-add-modifier"
      }
    },
    "GetDashmodifiersDashbyDashmerchantLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/modifier-api-dev-get-modifiers-by-merchant"
      }
    },
    "GetDashmodifiersDashbyDashproductLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/modifier-api-dev-get-modifiers-by-product"
      }
    },
    "GetDashmodifiersDashbyDashgroupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/modifier-api-dev-get-modifiers-by-group"
      }
    },
    "GetDashmodifierDashbyDashidLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/modifier-api-dev-get-modifier-by-id"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "modifier-api",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/modifier-api-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/modifier-api-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "modifierTable",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "modifier-api",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "AddDashmodifierLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/modifier-api/dev/1626896140339-2021-07-21T19:35:40.339Z/function.zip"
        },
        "Handler": "me.molka.handler.ApiHandler",
        "Runtime": "provided",
        "FunctionName": "modifier-api-dev-add-modifier",
        "MemorySize": 128,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "DISABLE_SIGNAL_HANDLERS": "true",
            "DYNAMODB_TABLE": "dev-modifierTable"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AddDashmodifierLogGroup"
      ]
    },
    "GetDashmodifiersDashbyDashmerchantLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/modifier-api/dev/1626896140339-2021-07-21T19:35:40.339Z/function.zip"
        },
        "Handler": "me.molka.handler.ApiHandler",
        "Runtime": "provided",
        "FunctionName": "modifier-api-dev-get-modifiers-by-merchant",
        "MemorySize": 128,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "DISABLE_SIGNAL_HANDLERS": "true",
            "DYNAMODB_TABLE": "dev-modifierTable"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetDashmodifiersDashbyDashmerchantLogGroup"
      ]
    },
    "GetDashmodifiersDashbyDashproductLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/modifier-api/dev/1626896140339-2021-07-21T19:35:40.339Z/function.zip"
        },
        "Handler": "me.molka.handler.ApiHandler",
        "Runtime": "provided",
        "FunctionName": "modifier-api-dev-get-modifiers-by-product",
        "MemorySize": 128,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "DISABLE_SIGNAL_HANDLERS": "true",
            "DYNAMODB_TABLE": "dev-modifierTable"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetDashmodifiersDashbyDashproductLogGroup"
      ]
    },
    "GetDashmodifiersDashbyDashgroupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/modifier-api/dev/1626896140339-2021-07-21T19:35:40.339Z/function.zip"
        },
        "Handler": "me.molka.handler.ApiHandler",
        "Runtime": "provided",
        "FunctionName": "modifier-api-dev-get-modifiers-by-group",
        "MemorySize": 128,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "DISABLE_SIGNAL_HANDLERS": "true",
            "DYNAMODB_TABLE": "dev-modifierTable"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetDashmodifiersDashbyDashgroupLogGroup"
      ]
    },
    "GetDashmodifierDashbyDashidLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/modifier-api/dev/1626896140339-2021-07-21T19:35:40.339Z/function.zip"
        },
        "Handler": "me.molka.handler.ApiHandler",
        "Runtime": "provided",
        "FunctionName": "modifier-api-dev-get-modifier-by-id",
        "MemorySize": 128,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "DISABLE_SIGNAL_HANDLERS": "true",
            "DYNAMODB_TABLE": "dev-modifierTable"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetDashmodifierDashbyDashidLogGroup"
      ]
    },
    "GetDashmodifiersDashbyDashmerchantLambdaVersionvJWgVGsoxYXn8VfbB7JcL4ZxxBcN3QPw1oEJVyEOR8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetDashmodifiersDashbyDashmerchantLambdaFunction"
        },
        "CodeSha256": "V24rVGTOk+pNQCV7gpJGjNM1/7x5/Yyohx1wKQ17nv0="
      }
    },
    "GetDashmodifiersDashbyDashproductLambdaVersionxLEo67DDMDeikR1vC64TmMlUXQeAZEDXEzPztigAbs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetDashmodifiersDashbyDashproductLambdaFunction"
        },
        "CodeSha256": "V24rVGTOk+pNQCV7gpJGjNM1/7x5/Yyohx1wKQ17nv0="
      }
    },
    "AddDashmodifierLambdaVersionwQrPyAPV7NBBvV0mU3BXevluwFkxO4i7IMSFIKw0UpI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddDashmodifierLambdaFunction"
        },
        "CodeSha256": "V24rVGTOk+pNQCV7gpJGjNM1/7x5/Yyohx1wKQ17nv0="
      }
    },
    "GetDashmodifiersDashbyDashgroupLambdaVersion70JNfCK4yYwz8NOZCjzXUlA6tuXcn3huDpJS2iu9zPA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetDashmodifiersDashbyDashgroupLambdaFunction"
        },
        "CodeSha256": "V24rVGTOk+pNQCV7gpJGjNM1/7x5/Yyohx1wKQ17nv0="
      }
    },
    "GetDashmodifierDashbyDashidLambdaVersione1vbNN154uwVdJAli2BcKo9xuY8dwy5H74sh54PW4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetDashmodifierDashbyDashidLambdaFunction"
        },
        "CodeSha256": "V24rVGTOk+pNQCV7gpJGjNM1/7x5/Yyohx1wKQ17nv0="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-modifier-api",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "AddDashmodifierLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddDashmodifierLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationAddDashmodifier": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "AddDashmodifierLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 5500
      }
    },
    "HttpApiRoutePostModifiers": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /modifiers",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationAddDashmodifier"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationAddDashmodifier"
    },
    "GetDashmodifiersDashbyDashmerchantLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetDashmodifiersDashbyDashmerchantLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetDashmodifiersDashbyDashmerchant": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetDashmodifiersDashbyDashmerchantLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 5500
      }
    },
    "HttpApiRouteGetModifiersMerchantMerchantidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /modifiers/merchant/{merchantId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetDashmodifiersDashbyDashmerchant"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetDashmodifiersDashbyDashmerchant"
    },
    "GetDashmodifiersDashbyDashproductLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetDashmodifiersDashbyDashproductLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetDashmodifiersDashbyDashproduct": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetDashmodifiersDashbyDashproductLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 5500
      }
    },
    "HttpApiRouteGetModifiersMerchantMerchantidVarProductProductidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /modifiers/merchant/{merchantId}/product/{productId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetDashmodifiersDashbyDashproduct"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetDashmodifiersDashbyDashproduct"
    },
    "GetDashmodifiersDashbyDashgroupLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetDashmodifiersDashbyDashgroupLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetDashmodifiersDashbyDashgroup": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetDashmodifiersDashbyDashgroupLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 5500
      }
    },
    "HttpApiRouteGetModifiersMerchantMerchantidVarProductProductidVarGroupGroupidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /modifiers/merchant/{merchantId}/product/{productId}/group/{groupId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetDashmodifiersDashbyDashgroup"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetDashmodifiersDashbyDashgroup"
    },
    "GetDashmodifierDashbyDashidLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetDashmodifierDashbyDashidLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetDashmodifierDashbyDashid": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetDashmodifierDashbyDashidLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 5500
      }
    },
    "HttpApiRouteGetModifiersMerchantMerchantidVarProductProductidVarGroupGroupidVarModifierModifieridVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /modifiers/merchant/{merchantId}/product/{productId}/group/{groupId}/modifier/{modifierId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetDashmodifierDashbyDashid"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetDashmodifierDashbyDashid"
    },
    "modifierTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "dev-modifierTable",
        "AttributeDefinitions": [
          {
            "AttributeName": "merchant",
            "AttributeType": "S"
          },
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "merchant",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "id",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-modifier-api-dev-ServerlessDeploymentBucketName"
      }
    },
    "GetDashmodifiersDashbyDashmerchantLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetDashmodifiersDashbyDashmerchantLambdaVersionvJWgVGsoxYXn8VfbB7JcL4ZxxBcN3QPw1oEJVyEOR8"
      },
      "Export": {
        "Name": "sls-modifier-api-dev-GetDashmodifiersDashbyDashmerchantLambdaFunctionQualifiedArn"
      }
    },
    "GetDashmodifiersDashbyDashproductLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetDashmodifiersDashbyDashproductLambdaVersionxLEo67DDMDeikR1vC64TmMlUXQeAZEDXEzPztigAbs"
      },
      "Export": {
        "Name": "sls-modifier-api-dev-GetDashmodifiersDashbyDashproductLambdaFunctionQualifiedArn"
      }
    },
    "AddDashmodifierLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddDashmodifierLambdaVersionwQrPyAPV7NBBvV0mU3BXevluwFkxO4i7IMSFIKw0UpI"
      },
      "Export": {
        "Name": "sls-modifier-api-dev-AddDashmodifierLambdaFunctionQualifiedArn"
      }
    },
    "GetDashmodifiersDashbyDashgroupLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetDashmodifiersDashbyDashgroupLambdaVersion70JNfCK4yYwz8NOZCjzXUlA6tuXcn3huDpJS2iu9zPA"
      },
      "Export": {
        "Name": "sls-modifier-api-dev-GetDashmodifiersDashbyDashgroupLambdaFunctionQualifiedArn"
      }
    },
    "GetDashmodifierDashbyDashidLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetDashmodifierDashbyDashidLambdaVersione1vbNN154uwVdJAli2BcKo9xuY8dwy5H74sh54PW4"
      },
      "Export": {
        "Name": "sls-modifier-api-dev-GetDashmodifierDashbyDashidLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-modifier-api-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-modifier-api-dev-HttpApiUrl"
      }
    }
  }
}